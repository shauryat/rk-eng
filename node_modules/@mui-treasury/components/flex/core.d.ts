import React from 'react';
declare type FlexContextValue = 'row' | 'column';
export declare const FlexProvider: React.Provider<FlexContextValue>;
export declare const GutterProvider: React.Provider<any>;
export declare type Position = 'left' | 'right' | 'top' | 'bottom' | 'middle' | 'center' | string;
export declare const positionInsideRow: (position: Position) => {
    marginLeft: string;
    alignSelf?: undefined;
    marginRight?: undefined;
} | {
    alignSelf: string;
    marginLeft?: undefined;
    marginRight?: undefined;
} | {
    alignSelf: string;
    marginLeft: string;
    marginRight: string;
};
export declare const positionInsideColumn: (position: Position) => {
    alignSelf: string;
    marginTop?: undefined;
    marginBottom?: undefined;
} | {
    marginTop: string;
    alignSelf?: undefined;
    marginBottom?: undefined;
} | {
    marginTop: string;
    marginBottom: string;
    alignSelf?: undefined;
} | {
    alignSelf: string;
    marginTop: string;
    marginBottom: string;
};
export declare const gutterInsideRow: (value: any) => {
    pl: any;
};
export declare const gutterInsideColumn: (value: any) => {
    pt: any;
};
export declare const useGutterCtx: () => any;
export declare const useGutterProps: (itemIndex: number) => {
    pl: any;
} | {
    pt: any;
};
export declare const useFlexCtx: () => FlexContextValue;
export declare const useFlexStyles: (position: Position) => {
    marginLeft: string;
    alignSelf?: undefined;
    marginRight?: undefined;
} | {
    alignSelf: string;
    marginLeft?: undefined;
    marginRight?: undefined;
} | {
    alignSelf: string;
    marginLeft: string;
    marginRight: string;
} | {
    alignSelf: string;
    marginTop?: undefined;
    marginBottom?: undefined;
} | {
    marginTop: string;
    alignSelf?: undefined;
    marginBottom?: undefined;
} | {
    marginTop: string;
    marginBottom: string;
    alignSelf?: undefined;
} | {
    alignSelf: string;
    marginTop: string;
    marginBottom: string;
};
export declare type Gutter = number | string | 'inherit' | Partial<Record<'xs' | 'sm' | 'md' | 'lg' | 'xl', string | number>>;
export declare type ProviderProps = {
    flexDirection: FlexContextValue;
    gutter: Gutter;
    children: React.ReactNode | React.ReactElement | React.ReactElement[];
};
export declare const Provider: ({ flexDirection, gutter, children, }: React.PropsWithChildren<ProviderProps>) => JSX.Element;
export {};
