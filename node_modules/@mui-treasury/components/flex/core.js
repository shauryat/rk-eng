"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Provider = exports.useFlexStyles = exports.useFlexCtx = exports.useGutterProps = exports.useGutterCtx = exports.gutterInsideColumn = exports.gutterInsideRow = exports.positionInsideColumn = exports.positionInsideRow = exports.GutterProvider = exports.FlexProvider = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var FlexContext = _react["default"].createContext(undefined);

var GutterContext = _react["default"].createContext(undefined);

var FlexProvider = FlexContext.Provider;
exports.FlexProvider = FlexProvider;
var GutterProvider = GutterContext.Provider;
exports.GutterProvider = GutterProvider;

var positionInsideRow = function positionInsideRow(position) {
  if (position === 'left') return undefined;
  if (position === 'right') return {
    marginLeft: 'auto'
  };
  if (position === 'top') return {
    alignSelf: 'flex-start'
  };
  if (position === 'bottom') return {
    alignSelf: 'flex-end'
  };
  if (position === 'middle') return {
    alignSelf: 'center'
  };
  if (position === 'center') return {
    alignSelf: 'center',
    marginLeft: 'auto',
    marginRight: 'auto'
  };
};

exports.positionInsideRow = positionInsideRow;

var positionInsideColumn = function positionInsideColumn(position) {
  if (position === 'left') return {
    alignSelf: 'flex-start'
  };
  if (position === 'right') return {
    alignSelf: 'flex-end'
  };
  if (position === 'top') return undefined;
  if (position === 'bottom') return {
    marginTop: 'auto'
  };
  if (position === 'middle') return {
    marginTop: 'auto',
    marginBottom: 'auto'
  };
  if (position === 'center') return {
    alignSelf: 'center',
    marginTop: 'auto',
    marginBottom: 'auto'
  };
};

exports.positionInsideColumn = positionInsideColumn;

var gutterInsideRow = function gutterInsideRow(value) {
  return {
    pl: value
  };
};

exports.gutterInsideRow = gutterInsideRow;

var gutterInsideColumn = function gutterInsideColumn(value) {
  return {
    pt: value
  };
};

exports.gutterInsideColumn = gutterInsideColumn;

var useGutterCtx = function useGutterCtx() {
  return _react["default"].useContext(GutterContext);
};

exports.useGutterCtx = useGutterCtx;

var useGutterProps = function useGutterProps(itemIndex) {
  var flex = _react["default"].useContext(FlexContext);

  var gutter = _react["default"].useContext(GutterContext);

  if (itemIndex) {
    if (flex === 'row') return gutterInsideRow(gutter);
    if (flex === 'column') return gutterInsideColumn(gutter);
  }
};

exports.useGutterProps = useGutterProps;

var useFlexCtx = function useFlexCtx() {
  return _react["default"].useContext(FlexContext);
};

exports.useFlexCtx = useFlexCtx;

var useFlexStyles = function useFlexStyles(position) {
  var flex = _react["default"].useContext(FlexContext);

  if (flex === 'row') return positionInsideRow(position);
  if (flex === 'column') return positionInsideColumn(position);
};

exports.useFlexStyles = useFlexStyles;

var Provider = function Provider(_ref) {
  var flexDirection = _ref.flexDirection,
      gutter = _ref.gutter,
      children = _ref.children;
  var inheritedGutter = useGutterCtx();
  return /*#__PURE__*/_react["default"].createElement(FlexProvider, {
    value: flexDirection
  }, /*#__PURE__*/_react["default"].createElement(GutterProvider, {
    value: gutter === 'inherit' ? inheritedGutter : gutter
  }, _react["default"].Children.map(children, function (child, index) {
    if (_react["default"].isValidElement(child)) {
      return _react["default"].cloneElement(child, {
        'data-flexindex': index
      });
    }

    return child;
  })));
};

exports.Provider = Provider;