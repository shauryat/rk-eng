{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Desktop/RK Engineering/components/Future/Transition.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { CSSTransition as ReactCSSTransition } from 'react-transition-group';\nimport { useRef, useEffect, useContext } from 'react';\nconst TransitionContext = React.createContext({\n  parent: {}\n});\n\nfunction useIsInitialRender() {\n  const isInitialRender = useRef(true);\n  useEffect(() => {\n    isInitialRender.current = false;\n  }, []);\n  return isInitialRender.current;\n}\n\nfunction CSSTransition({\n  show,\n  enter = '',\n  enterFrom = '',\n  enterTo = '',\n  leave = '',\n  leaveFrom = '',\n  leaveTo = '',\n  appear,\n  children\n}) {\n  const enterClasses = enter.split(' ').filter(s => s.length);\n  const enterFromClasses = enterFrom.split(' ').filter(s => s.length);\n  const enterToClasses = enterTo.split(' ').filter(s => s.length);\n  const leaveClasses = leave.split(' ').filter(s => s.length);\n  const leaveFromClasses = leaveFrom.split(' ').filter(s => s.length);\n  const leaveToClasses = leaveTo.split(' ').filter(s => s.length);\n\n  function addClasses(node, classes) {\n    classes.length && node.classList.add(...classes);\n  }\n\n  function removeClasses(node, classes) {\n    classes.length && node.classList.remove(...classes);\n  }\n\n  return __jsx(ReactCSSTransition, {\n    appear: appear,\n    unmountOnExit: true,\n    in: show,\n    addEndListener: (node, done) => {\n      node.addEventListener('transitionend', done, false);\n    },\n    onEnter: node => {\n      addClasses(node, [...enterClasses, ...enterFromClasses]);\n    },\n    onEntering: node => {\n      removeClasses(node, enterFromClasses);\n      addClasses(node, enterToClasses);\n    },\n    onEntered: node => {\n      removeClasses(node, [...enterToClasses, ...enterClasses]);\n    },\n    onExit: node => {\n      addClasses(node, [...leaveClasses, ...leaveFromClasses]);\n    },\n    onExiting: node => {\n      removeClasses(node, leaveFromClasses);\n      addClasses(node, leaveToClasses);\n    },\n    onExited: node => {\n      removeClasses(node, [...leaveToClasses, ...leaveClasses]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction Transition(_ref) {\n  let {\n    show,\n    appear\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"show\", \"appear\"]);\n\n  const {\n    parent\n  } = useContext(TransitionContext);\n  const isInitialRender = useIsInitialRender();\n  const isChild = show === undefined;\n\n  if (isChild) {\n    return __jsx(CSSTransition, _extends({\n      appear: parent.appear || !parent.isInitialRender,\n      show: parent.show\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return __jsx(TransitionContext.Provider, {\n    value: {\n      parent: {\n        show,\n        isInitialRender,\n        appear\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(CSSTransition, _extends({\n    appear: appear,\n    show: show\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default Transition;","map":{"version":3,"sources":["/Users/dev/Desktop/RK Engineering/components/Future/Transition.js"],"names":["CSSTransition","ReactCSSTransition","useRef","useEffect","useContext","TransitionContext","React","createContext","parent","useIsInitialRender","isInitialRender","current","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","appear","children","enterClasses","split","filter","s","length","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","addClasses","node","classes","classList","add","removeClasses","remove","done","addEventListener","Transition","rest","isChild","undefined"],"mappings":"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","sourcesContent":["import { CSSTransition as ReactCSSTransition } from 'react-transition-group'\nimport { useRef, useEffect, useContext } from 'react'\n\nconst TransitionContext = React.createContext({\n  parent: {},\n})\n\nfunction useIsInitialRender() {\n  const isInitialRender = useRef(true)\n  useEffect(() => {\n    isInitialRender.current = false\n  }, [])\n  return isInitialRender.current\n}\n\nfunction CSSTransition({\n  show,\n  enter = '',\n  enterFrom = '',\n  enterTo = '',\n  leave = '',\n  leaveFrom = '',\n  leaveTo = '',\n  appear,\n  children,\n}) {\n  const enterClasses = enter.split(' ').filter((s) => s.length)\n  const enterFromClasses = enterFrom.split(' ').filter((s) => s.length)\n  const enterToClasses = enterTo.split(' ').filter((s) => s.length)\n  const leaveClasses = leave.split(' ').filter((s) => s.length)\n  const leaveFromClasses = leaveFrom.split(' ').filter((s) => s.length)\n  const leaveToClasses = leaveTo.split(' ').filter((s) => s.length)\n\n  function addClasses(node, classes) {\n    classes.length && node.classList.add(...classes)\n  }\n\n  function removeClasses(node, classes) {\n    classes.length && node.classList.remove(...classes)\n  }\n\n  return (\n    <ReactCSSTransition\n      appear={appear}\n      unmountOnExit\n      in={show}\n      addEndListener={(node, done) => {\n        node.addEventListener('transitionend', done, false)\n      }}\n      onEnter={(node) => {\n        addClasses(node, [...enterClasses, ...enterFromClasses])\n      }}\n      onEntering={(node) => {\n        removeClasses(node, enterFromClasses)\n        addClasses(node, enterToClasses)\n      }}\n      onEntered={(node) => {\n        removeClasses(node, [...enterToClasses, ...enterClasses])\n      }}\n      onExit={(node) => {\n        addClasses(node, [...leaveClasses, ...leaveFromClasses])\n      }}\n      onExiting={(node) => {\n        removeClasses(node, leaveFromClasses)\n        addClasses(node, leaveToClasses)\n      }}\n      onExited={(node) => {\n        removeClasses(node, [...leaveToClasses, ...leaveClasses])\n      }}\n    >\n      {children}\n    </ReactCSSTransition>\n  )\n}\n\nfunction Transition({ show, appear, ...rest }) {\n  const { parent } = useContext(TransitionContext)\n  const isInitialRender = useIsInitialRender()\n  const isChild = show === undefined\n\n  if (isChild) {\n    return (\n      <CSSTransition\n        appear={parent.appear || !parent.isInitialRender}\n        show={parent.show}\n        {...rest}\n      />\n    )\n  }\n\n  return (\n    <TransitionContext.Provider\n      value={{\n        parent: {\n          show,\n          isInitialRender,\n          appear,\n        },\n      }}\n    >\n      <CSSTransition appear={appear} show={show} {...rest} />\n    </TransitionContext.Provider>\n  )\n}\n\nexport default Transition"]},"metadata":{},"sourceType":"module"}