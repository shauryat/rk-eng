{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"/Users/dev/Desktop/RK Engineering/components/Future/Transition.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { CSSTransition as ReactCSSTransition } from 'react-transition-group';\nimport { useRef, useEffect, useContext } from 'react';\nvar TransitionContext = React.createContext({\n  parent: {}\n});\n\nfunction useIsInitialRender() {\n  _s();\n\n  var isInitialRender = useRef(true);\n  useEffect(function () {\n    isInitialRender.current = false;\n  }, []);\n  return isInitialRender.current;\n}\n\n_s(useIsInitialRender, \"LWORZKme+o33nlPX1pKwcN+8Guw=\");\n\nfunction CSSTransition(_ref) {\n  var show = _ref.show,\n      _ref$enter = _ref.enter,\n      enter = _ref$enter === void 0 ? '' : _ref$enter,\n      _ref$enterFrom = _ref.enterFrom,\n      enterFrom = _ref$enterFrom === void 0 ? '' : _ref$enterFrom,\n      _ref$enterTo = _ref.enterTo,\n      enterTo = _ref$enterTo === void 0 ? '' : _ref$enterTo,\n      _ref$leave = _ref.leave,\n      leave = _ref$leave === void 0 ? '' : _ref$leave,\n      _ref$leaveFrom = _ref.leaveFrom,\n      leaveFrom = _ref$leaveFrom === void 0 ? '' : _ref$leaveFrom,\n      _ref$leaveTo = _ref.leaveTo,\n      leaveTo = _ref$leaveTo === void 0 ? '' : _ref$leaveTo,\n      appear = _ref.appear,\n      children = _ref.children;\n  var enterClasses = enter.split(' ').filter(function (s) {\n    return s.length;\n  });\n  var enterFromClasses = enterFrom.split(' ').filter(function (s) {\n    return s.length;\n  });\n  var enterToClasses = enterTo.split(' ').filter(function (s) {\n    return s.length;\n  });\n  var leaveClasses = leave.split(' ').filter(function (s) {\n    return s.length;\n  });\n  var leaveFromClasses = leaveFrom.split(' ').filter(function (s) {\n    return s.length;\n  });\n  var leaveToClasses = leaveTo.split(' ').filter(function (s) {\n    return s.length;\n  });\n\n  function addClasses(node, classes) {\n    var _node$classList;\n\n    classes.length && (_node$classList = node.classList).add.apply(_node$classList, _toConsumableArray(classes));\n  }\n\n  function removeClasses(node, classes) {\n    var _node$classList2;\n\n    classes.length && (_node$classList2 = node.classList).remove.apply(_node$classList2, _toConsumableArray(classes));\n  }\n\n  return __jsx(ReactCSSTransition, {\n    appear: appear,\n    unmountOnExit: true,\n    \"in\": show,\n    addEndListener: function addEndListener(node, done) {\n      node.addEventListener('transitionend', done, false);\n    },\n    onEnter: function onEnter(node) {\n      addClasses(node, [].concat(_toConsumableArray(enterClasses), _toConsumableArray(enterFromClasses)));\n    },\n    onEntering: function onEntering(node) {\n      removeClasses(node, enterFromClasses);\n      addClasses(node, enterToClasses);\n    },\n    onEntered: function onEntered(node) {\n      removeClasses(node, [].concat(_toConsumableArray(enterToClasses), _toConsumableArray(enterClasses)));\n    },\n    onExit: function onExit(node) {\n      addClasses(node, [].concat(_toConsumableArray(leaveClasses), _toConsumableArray(leaveFromClasses)));\n    },\n    onExiting: function onExiting(node) {\n      removeClasses(node, leaveFromClasses);\n      addClasses(node, leaveToClasses);\n    },\n    onExited: function onExited(node) {\n      removeClasses(node, [].concat(_toConsumableArray(leaveToClasses), _toConsumableArray(leaveClasses)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n_c = CSSTransition;\n\nfunction Transition(_ref2) {\n  _s2();\n\n  var show = _ref2.show,\n      appear = _ref2.appear,\n      rest = _objectWithoutProperties(_ref2, [\"show\", \"appear\"]);\n\n  var _useContext = useContext(TransitionContext),\n      parent = _useContext.parent;\n\n  var isInitialRender = useIsInitialRender();\n  var isChild = show === undefined;\n\n  if (isChild) {\n    return __jsx(CSSTransition, _extends({\n      appear: parent.appear || !parent.isInitialRender,\n      show: parent.show\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return __jsx(TransitionContext.Provider, {\n    value: {\n      parent: {\n        show: show,\n        isInitialRender: isInitialRender,\n        appear: appear\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(CSSTransition, _extends({\n    appear: appear,\n    show: show\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  })));\n}\n\n_s2(Transition, \"5/ld31ZRrHaelvMU+nF66Td07+w=\", false, function () {\n  return [useIsInitialRender];\n});\n\n_c2 = Transition;\nexport default Transition;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CSSTransition\");\n$RefreshReg$(_c2, \"Transition\");","map":{"version":3,"sources":["/Users/dev/Desktop/RK Engineering/components/Future/Transition.js"],"names":["CSSTransition","ReactCSSTransition","useRef","useEffect","useContext","TransitionContext","React","createContext","parent","useIsInitialRender","isInitialRender","current","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","appear","children","enterClasses","split","filter","s","length","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","addClasses","node","classes","classList","add","removeClasses","remove","done","addEventListener","Transition","rest","isChild","undefined"],"mappings":"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","sourcesContent":["import { CSSTransition as ReactCSSTransition } from 'react-transition-group'\nimport { useRef, useEffect, useContext } from 'react'\n\nconst TransitionContext = React.createContext({\n  parent: {},\n})\n\nfunction useIsInitialRender() {\n  const isInitialRender = useRef(true)\n  useEffect(() => {\n    isInitialRender.current = false\n  }, [])\n  return isInitialRender.current\n}\n\nfunction CSSTransition({\n  show,\n  enter = '',\n  enterFrom = '',\n  enterTo = '',\n  leave = '',\n  leaveFrom = '',\n  leaveTo = '',\n  appear,\n  children,\n}) {\n  const enterClasses = enter.split(' ').filter((s) => s.length)\n  const enterFromClasses = enterFrom.split(' ').filter((s) => s.length)\n  const enterToClasses = enterTo.split(' ').filter((s) => s.length)\n  const leaveClasses = leave.split(' ').filter((s) => s.length)\n  const leaveFromClasses = leaveFrom.split(' ').filter((s) => s.length)\n  const leaveToClasses = leaveTo.split(' ').filter((s) => s.length)\n\n  function addClasses(node, classes) {\n    classes.length && node.classList.add(...classes)\n  }\n\n  function removeClasses(node, classes) {\n    classes.length && node.classList.remove(...classes)\n  }\n\n  return (\n    <ReactCSSTransition\n      appear={appear}\n      unmountOnExit\n      in={show}\n      addEndListener={(node, done) => {\n        node.addEventListener('transitionend', done, false)\n      }}\n      onEnter={(node) => {\n        addClasses(node, [...enterClasses, ...enterFromClasses])\n      }}\n      onEntering={(node) => {\n        removeClasses(node, enterFromClasses)\n        addClasses(node, enterToClasses)\n      }}\n      onEntered={(node) => {\n        removeClasses(node, [...enterToClasses, ...enterClasses])\n      }}\n      onExit={(node) => {\n        addClasses(node, [...leaveClasses, ...leaveFromClasses])\n      }}\n      onExiting={(node) => {\n        removeClasses(node, leaveFromClasses)\n        addClasses(node, leaveToClasses)\n      }}\n      onExited={(node) => {\n        removeClasses(node, [...leaveToClasses, ...leaveClasses])\n      }}\n    >\n      {children}\n    </ReactCSSTransition>\n  )\n}\n\nfunction Transition({ show, appear, ...rest }) {\n  const { parent } = useContext(TransitionContext)\n  const isInitialRender = useIsInitialRender()\n  const isChild = show === undefined\n\n  if (isChild) {\n    return (\n      <CSSTransition\n        appear={parent.appear || !parent.isInitialRender}\n        show={parent.show}\n        {...rest}\n      />\n    )\n  }\n\n  return (\n    <TransitionContext.Provider\n      value={{\n        parent: {\n          show,\n          isInitialRender,\n          appear,\n        },\n      }}\n    >\n      <CSSTransition appear={appear} show={show} {...rest} />\n    </TransitionContext.Provider>\n  )\n}\n\nexport default Transition"]},"metadata":{},"sourceType":"module"}